(ns [{ns}]
  (:refer-clojure :exclude [update])
  (:require [korma.core :refer [defentity many-to-many select where limit insert values update delete set-fields]]
            [clojure.spec :as s]
            [[{entity-ns}] :refer [[{entityname}]]]))

;(s/fdef get-all-[{entityname}]s :
(defn get-all-[{entityname}]s [] (select [{entityname}]))

(defn get-[{entityname}]-by-id [id] (first (select [{entityname}] (where {:id id}) (limit 1))))

(defn create-[{entityname}] [[% for col in cols %][{col.colname}] [% endfor %]]
  (insert [{entityname}] (values {[% for col in cols %]:[{col.colname}] [{col.colname}] [% endfor %]})))

(defn update-[{entityname}] [id fields]
  (update [{entityname}] (set-fields fields) (where {:id id})))

(defn delete-[{entityname}] [id] (delete [{entityname}] (where {:id id})))
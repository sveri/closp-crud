(ns [{ns}]
  (:require [korma.core :refer [defentity many-to-many select where limit insert values update delete set-fields]])
  (:import (java.util UUID)))

(declare [{entityname}])

(defentity [{entityname}])

(defn get-all-[{entityname}]s [] (select [{entityname}]))

(defn get-[{entityname}]-by-uuid [uuid] (first (select [{entityname}] (where {:UUID uuid}) (limit 1))))

(defn create-[{entityname}] [[% for col in cols %][{col.colname}] [% endfor %]]
  (insert [{entityname}] (values {[% for col in cols %]:[{col.colname}] [{col.colname}] [% endfor %] :UUID (str (UUID/randomUUID))})))

(defn update-[{entityname}] [uuid fields]
  (update [{entityname}] (set-fields fields) (where {:UUID uuid})))

(defn delete-[{entityname}] [uuid] (delete [{entityname}] (where {:UUID uuid})))